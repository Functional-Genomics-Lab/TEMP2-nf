1. Add split reads (proper paired with supplementary aligment reads) besides unproper paired reads.
2. Output TSD sequence if have.
3. Use samtools and bedtools for most sam/bam file processing for accelarating.
4. Map all raw reads to transposon consensus sequence to infer an overall distribution.
5. When map to all raw reads / unproper paired reads / spit reads to transposon, abandon those have soft clipping in both sides and shorter than 50bp or 0.75 * read length.  
6. Remove regions with extremely high depth.
7. Remove redundant insertions in the same position due to some homologous sequences from different transposons.
8. Calculate frequency by support / (support + unsupport * 2) instead of support / (support + unsupport) after remove redundant insertions.
9. Set reads span read_length / 2 bp both sides instead of 20 bp both sides, cause the support reads needs at least read_length - 20 overhang in genome side to remove potential read pairs in poorly assembled/annotated transposons.
10. Use split reads to infer more precised insertion corrdinates.
11. Fix bug: removed singleton has been calculated in soma rate.
12. Remove insertions overlapped with the same reference annotation before filtering. Then remove 2p and singleton insertions overlapped with removed insertions again to aviod transposon similarity. Then remove 1p1 insertions overlapped with removd 1p1 insertions again to aviod transposon similarity.
13. Remove 1p1 insertions which are not full length but shorter than 500bp
14. Indicate True candidate regions where support reads will fall in. Then remove insertions whose support reads do not fall in True candidate regions.
15. Calculate somatic insertion lamda for each transposons as a whole.
16. Mark inbanlanced somatic insertions which more than 7/8 somatic insertions are in one direction.
17. Also mark somatic insertions for short transposons (<500bp). 
18. Estimate somatic insertions in each genome based on the average reads across each singleton insertions.
19. In processMerge step, remove insertions with a lot of low complexity support reads.
